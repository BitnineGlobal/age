/*-------------------------------------------------------------------------
 *
 * cypher_kwlist_d.h
 *    List of keywords represented as a ScanKeywordList.
 *
 * Portions Copyright (c) 1996-2019, PostgreSQL Global Development Group
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 * NOTES
 *  ******************************
 *  *** DO NOT EDIT THIS FILE! ***
 *  ******************************
 *
 *  It has been GENERATED by src/tools/gen_keywordlist.pl
 *
 *-------------------------------------------------------------------------
 */

#ifndef CYPHER_KWLIST_D_H
#define CYPHER_KWLIST_D_H

#include "parser/kwlookup.h"

static const char CypherKeyword_kw_string[] =
	"all\0"
	"analyze\0"
	"and\0"
	"as\0"
	"asc\0"
	"ascending\0"
	"by\0"
	"call\0"
	"case\0"
	"coalesce\0"
	"contains\0"
	"create\0"
	"delete\0"
	"desc\0"
	"descending\0"
	"detach\0"
	"distinct\0"
	"else\0"
	"end\0"
	"ends\0"
	"exists\0"
	"explain\0"
	"false\0"
	"in\0"
	"is\0"
	"limit\0"
	"match\0"
	"merge\0"
	"not\0"
	"null\0"
	"optional\0"
	"or\0"
	"order\0"
	"remove\0"
	"return\0"
	"set\0"
	"skip\0"
	"starts\0"
	"then\0"
	"true\0"
	"union\0"
	"unwind\0"
	"verbose\0"
	"when\0"
	"where\0"
	"with\0"
	"xor\0"
	"yield";

static const uint16 CypherKeyword_kw_offsets[] = {
	0,
	4,
	12,
	16,
	19,
	23,
	33,
	36,
	41,
	46,
	55,
	64,
	71,
	78,
	83,
	94,
	101,
	110,
	115,
	119,
	124,
	131,
	139,
	145,
	148,
	151,
	157,
	163,
	169,
	173,
	178,
	187,
	190,
	196,
	203,
	210,
	214,
	219,
	226,
	231,
	236,
	242,
	249,
	257,
	262,
	268,
	273,
	277,
};

#define CYPHERKEYWORD_NUM_KEYWORDS 48

static int
CypherKeyword_hash_func(const void *key, size_t keylen)
{
	static const int8 h[97] = {
		   127,     18,      0,    127,      8,    127,     22,    127,
		   127,     22,    -10,     11,     45,     -4,    127,      0,
		   127,     48,      2,    127,     43,    127,    127,     18,
		   127,     26,      9,    127,    -23,    127,    127,    127,
		    -2,     28,     68,    127,    -35,     29,    127,      0,
		   127,    127,    -12,    127,     18,      1,    -34,     -9,
		    27,     -3,     20,    127,    127,     52,     -7,    -34,
		    34,      8,    127,    127,     16,      0,    127,     31,
		   127,    127,    127,     23,    127,    127,    127,      0,
		    24,     23,    127,      4,      0,      0,     35,     -2,
		     0,     40,    127,    127,      0,      7,      0,     27,
		   127,    -13,    127,      0,     22,    127,     -8,    127,
		   127,
	};

	const unsigned char *k = (const unsigned char *) key;
	uint32		a = 0;
	uint32		b = 1;

	while (keylen--)
	{
		unsigned char c = *k++ | 0x20;

		a = a * 31 + c;
		b = b * 127 + c;
	}
	return h[a % 97] + h[b % 97];
}

const ScanKeywordList CypherKeyword = {
	CypherKeyword_kw_string,
	CypherKeyword_kw_offsets,
	CypherKeyword_hash_func,
	CYPHERKEYWORD_NUM_KEYWORDS,
	10
};

#endif							/* CYPHER_KWLIST_D_H */
