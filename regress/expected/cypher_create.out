/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
LOAD 'age';
SET search_path TO ag_catalog;
SELECT create_graph('cypher_create');
NOTICE:  graph "cypher_create" has been created
 create_graph 
--------------
 
(1 row)

SELECT * FROM cypher('cypher_create', $$CREATE ()$$) AS (a agtype);
 a 
---
(0 rows)

-- vertex graphid
SELECT * FROM cypher('cypher_create', $$CREATE (:v)$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$CREATE (:v {})$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$CREATE (:v {key: 'value'})$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$MATCH (n:v) RETURN n$$) AS (n agtype);
                                       n                                       
-------------------------------------------------------------------------------
 {"id": 844424930131969, "label": "v", "properties": {}}::vertex
 {"id": 844424930131970, "label": "v", "properties": {}}::vertex
 {"id": 844424930131971, "label": "v", "properties": {"key": "value"}}::vertex
(3 rows)

-- Vertex label inheritance
SELECT create_vlabel('cypher_create', 'parent_vlabel');
NOTICE:  VLabel "parent_vlabel" has been created
 create_vlabel 
---------------
 
(1 row)

SELECT create_vlabel('cypher_create', 'child_vlabel_one', ARRAY['parent_vlabel']);
NOTICE:  VLabel child_vlabel_one will inherit from parent_vlabel
NOTICE:  merging column "id" with inherited definition
NOTICE:  merging column "properties" with inherited definition
NOTICE:  VLabel "child_vlabel_one" has been created
 create_vlabel 
---------------
 
(1 row)

SELECT create_vlabel('cypher_create', 'child_vlabel_two', ARRAY['parent_vlabel', 'child_vlabel_one']);
NOTICE:  VLabel child_vlabel_two will inherit from parent_vlabel
NOTICE:  VLabel child_vlabel_two will inherit from child_vlabel_one
NOTICE:  merging multiple inherited definitions of column "id"
NOTICE:  merging multiple inherited definitions of column "properties"
NOTICE:  merging column "id" with inherited definition
NOTICE:  merging column "properties" with inherited definition
NOTICE:  VLabel "child_vlabel_two" has been created
 create_vlabel 
---------------
 
(1 row)

SELECT create_vlabel('cypher_create', 'child_vlabel_three', ARRAY['parent_vlabel', 'child_vlabel_one', 'child_vlabel_two']);
NOTICE:  VLabel child_vlabel_three will inherit from parent_vlabel
NOTICE:  VLabel child_vlabel_three will inherit from child_vlabel_one
NOTICE:  VLabel child_vlabel_three will inherit from child_vlabel_two
NOTICE:  merging multiple inherited definitions of column "id"
NOTICE:  merging multiple inherited definitions of column "properties"
NOTICE:  merging multiple inherited definitions of column "id"
NOTICE:  merging multiple inherited definitions of column "properties"
NOTICE:  merging column "id" with inherited definition
NOTICE:  merging column "properties" with inherited definition
NOTICE:  VLabel "child_vlabel_three" has been created
 create_vlabel 
---------------
 
(1 row)

SELECT * FROM cypher('cypher_create', $$CREATE (n:parent_vlabel {}) RETURN n$$) AS (n agtype);
                                      n                                       
------------------------------------------------------------------------------
 {"id": 1125899906842625, "label": "parent_vlabel", "properties": {}}::vertex
(1 row)

SELECT * FROM cypher('cypher_create', $$CREATE (n:child_vlabel_one {}) RETURN n$$) AS (n agtype);
                                        n                                        
---------------------------------------------------------------------------------
 {"id": 1407374883553281, "label": "child_vlabel_one", "properties": {}}::vertex
(1 row)

SELECT * FROM cypher('cypher_create', $$CREATE (n:child_vlabel_two {}) RETURN n$$) AS (n agtype);
                                        n                                        
---------------------------------------------------------------------------------
 {"id": 1688849860263937, "label": "child_vlabel_two", "properties": {}}::vertex
(1 row)

SELECT * FROM cypher('cypher_create', $$CREATE (n:child_vlabel_three {}) RETURN n$$) AS (n agtype);
                                         n                                         
-----------------------------------------------------------------------------------
 {"id": 1970324836974593, "label": "child_vlabel_three", "properties": {}}::vertex
(1 row)

-- Edge label inheritance
SELECT create_elabel('cypher_create', 'parent_elabel');
NOTICE:  ELabel "parent_elabel" has been created
 create_elabel 
---------------
 
(1 row)

SELECT create_elabel('cypher_create', 'child_elabel_one', ARRAY['parent_elabel']);
NOTICE:  ELabel child_elabel_one will inherit from parent_elabel
NOTICE:  merging column "id" with inherited definition
NOTICE:  merging column "start_id" with inherited definition
NOTICE:  merging column "end_id" with inherited definition
NOTICE:  merging column "properties" with inherited definition
NOTICE:  ELabel "child_elabel_one" has been created
 create_elabel 
---------------
 
(1 row)

SELECT create_elabel('cypher_create', 'child_elabel_two', ARRAY['parent_elabel', 'child_elabel_one']);
NOTICE:  ELabel child_elabel_two will inherit from parent_elabel
NOTICE:  ELabel child_elabel_two will inherit from child_elabel_one
NOTICE:  merging multiple inherited definitions of column "id"
NOTICE:  merging multiple inherited definitions of column "start_id"
NOTICE:  merging multiple inherited definitions of column "end_id"
NOTICE:  merging multiple inherited definitions of column "properties"
NOTICE:  merging column "id" with inherited definition
NOTICE:  merging column "start_id" with inherited definition
NOTICE:  merging column "end_id" with inherited definition
NOTICE:  merging column "properties" with inherited definition
NOTICE:  ELabel "child_elabel_two" has been created
 create_elabel 
---------------
 
(1 row)

SELECT create_elabel('cypher_create', 'child_elabel_three', ARRAY['parent_elabel', 'child_elabel_one', 'child_elabel_two']);
NOTICE:  ELabel child_elabel_three will inherit from parent_elabel
NOTICE:  ELabel child_elabel_three will inherit from child_elabel_one
NOTICE:  ELabel child_elabel_three will inherit from child_elabel_two
NOTICE:  merging multiple inherited definitions of column "id"
NOTICE:  merging multiple inherited definitions of column "start_id"
NOTICE:  merging multiple inherited definitions of column "end_id"
NOTICE:  merging multiple inherited definitions of column "properties"
NOTICE:  merging multiple inherited definitions of column "id"
NOTICE:  merging multiple inherited definitions of column "start_id"
NOTICE:  merging multiple inherited definitions of column "end_id"
NOTICE:  merging multiple inherited definitions of column "properties"
NOTICE:  merging column "id" with inherited definition
NOTICE:  merging column "start_id" with inherited definition
NOTICE:  merging column "end_id" with inherited definition
NOTICE:  merging column "properties" with inherited definition
NOTICE:  ELabel "child_elabel_three" has been created
 create_elabel 
---------------
 
(1 row)

SELECT * FROM cypher('cypher_create', $$CREATE (:v)-[parent_e:parent_elabel]->(:v) RETURN parent_e$$) AS (parent_e agtype);
                                                              parent_e                                                              
------------------------------------------------------------------------------------------------------------------------------------
 {"id": 2251799813685249, "label": "parent_elabel", "end_id": 844424930131973, "start_id": 844424930131972, "properties": {}}::edge
(1 row)

SELECT * FROM cypher('cypher_create', $$CREATE (:v)-[child_one_e:child_elabel_one]->(:v) RETURN child_one_e$$) AS (child_one_e agtype);
                                                              child_one_e                                                              
---------------------------------------------------------------------------------------------------------------------------------------
 {"id": 2533274790395905, "label": "child_elabel_one", "end_id": 844424930131975, "start_id": 844424930131974, "properties": {}}::edge
(1 row)

SELECT * FROM cypher('cypher_create', $$CREATE (:v)-[child_two_e:child_elabel_two]->(:v) RETURN child_two_e$$) AS (child_two_e agtype);
                                                              child_two_e                                                              
---------------------------------------------------------------------------------------------------------------------------------------
 {"id": 2814749767106561, "label": "child_elabel_two", "end_id": 844424930131977, "start_id": 844424930131976, "properties": {}}::edge
(1 row)

SELECT * FROM cypher('cypher_create', $$CREATE (:v)-[child_three_e:child_elabel_three]->(:v) RETURN child_three_e$$) AS (child_three_e agtype);
                                                              child_three_e                                                              
-----------------------------------------------------------------------------------------------------------------------------------------
 {"id": 3096224743817217, "label": "child_elabel_three", "end_id": 844424930131979, "start_id": 844424930131978, "properties": {}}::edge
(1 row)

-- Left relationship
SELECT * FROM cypher('cypher_create', $$
    CREATE (:v {id:"right rel, initial node"})-[:e {id:"right rel"}]->(:v {id:"right rel, end node"})
$$) AS (a agtype);
 a 
---
(0 rows)

-- Right relationship
SELECT * FROM cypher('cypher_create', $$
    CREATE (:v {id:"left rel, initial node"})<-[:e {id:"left rel"}]-(:v {id:"left rel, end node"})
$$) AS (a agtype);
 a 
---
(0 rows)

-- Pattern creates a path from the initial node to the last node
SELECT * FROM cypher('cypher_create', $$
    CREATE (:v {id: "path, initial node"})-[:e {id: "path, edge one"}]->(:v {id:"path, middle node"})-[:e {id:"path, edge two"}]->(:v {id:"path, last node"})
$$) AS (a agtype);
 a 
---
(0 rows)

-- middle vertex points to the initial and last vertex
SELECT * FROM cypher('cypher_create', $$
    CREATE (:v {id: "divergent, initial node"})<-[:e {id: "divergent, edge one"}]-(:v {id: "divergent middle node"})-[:e {id: "divergent, edge two"}]->(:v {id: "divergent, end node"})
$$) AS (a agtype);
 a 
---
(0 rows)

-- initial and last vertex point to the middle vertex
SELECT * FROM cypher('cypher_create', $$
    CREATE (:v {id: "convergent, initial node"})-[:e {id: "convergent, edge one"}]->(:v {id: "convergent middle node"})<-[:e {id: "convergent, edge two"}]-(:v {id: "convergent, end node"})
$$) AS (a agtype);
 a 
---
(0 rows)

-- Validate Paths work correctly
SELECT * FROM cypher('cypher_create', $$
    CREATE (:v {id: "paths, vertex one"})-[:e {id: "paths, edge one"}]->(:v {id: "paths, vertex two"}),
           (:v {id: "paths, vertex three"})-[:e {id: "paths, edge two"}]->(:v {id: "paths, vertex four"})
$$) AS (a agtype);
 a 
---
(0 rows)

--edge with double relationship will throw an error
SELECT * FROM cypher('cypher_create', $$CREATE (:v)<-[:e]->()$$) AS (a agtype);
ERROR:  syntax error at or near ">"
LINE 1: ... FROM cypher('cypher_create', $$CREATE (:v)<-[:e]->()$$) AS ...
                                                             ^
--edge with no relationship will throw an error
SELECT * FROM cypher('cypher_create', $$CREATE (:v)-[:e]-()$$) AS (a agtype);
ERROR:  only directed relationships are allowed in CREATE
LINE 1: ...LECT * FROM cypher('cypher_create', $$CREATE (:v)-[:e]-()$$)...
                                                             ^
--edges without labels are not supported
SELECT * FROM cypher('cypher_create', $$CREATE (:v)-[]->(:v)$$) AS (a agtype);
ERROR:  relationships must be specify a label in CREATE.
LINE 1: ...LECT * FROM cypher('cypher_create', $$CREATE (:v)-[]->(:v)$$...
                                                             ^
SELECT * FROM cypher_create.e;
        id        |    start_id     |     end_id      |           properties           
------------------+-----------------+-----------------+--------------------------------
 3377699720527873 | 844424930131980 | 844424930131981 | {"id": "right rel"}
 3377699720527874 | 844424930131983 | 844424930131982 | {"id": "left rel"}
 3377699720527875 | 844424930131985 | 844424930131986 | {"id": "path, edge two"}
 3377699720527876 | 844424930131984 | 844424930131985 | {"id": "path, edge one"}
 3377699720527877 | 844424930131988 | 844424930131989 | {"id": "divergent, edge two"}
 3377699720527878 | 844424930131988 | 844424930131987 | {"id": "divergent, edge one"}
 3377699720527879 | 844424930131992 | 844424930131991 | {"id": "convergent, edge two"}
 3377699720527880 | 844424930131990 | 844424930131991 | {"id": "convergent, edge one"}
 3377699720527881 | 844424930131993 | 844424930131994 | {"id": "paths, edge one"}
 3377699720527882 | 844424930131995 | 844424930131996 | {"id": "paths, edge two"}
(10 rows)

SELECT * FROM cypher_create.v;
       id        |             properties             
-----------------+------------------------------------
 844424930131969 | {}
 844424930131970 | {}
 844424930131971 | {"key": "value"}
 844424930131972 | {}
 844424930131973 | {}
 844424930131974 | {}
 844424930131975 | {}
 844424930131976 | {}
 844424930131977 | {}
 844424930131978 | {}
 844424930131979 | {}
 844424930131980 | {"id": "right rel, initial node"}
 844424930131981 | {"id": "right rel, end node"}
 844424930131982 | {"id": "left rel, initial node"}
 844424930131983 | {"id": "left rel, end node"}
 844424930131984 | {"id": "path, initial node"}
 844424930131985 | {"id": "path, middle node"}
 844424930131986 | {"id": "path, last node"}
 844424930131987 | {"id": "divergent, initial node"}
 844424930131988 | {"id": "divergent middle node"}
 844424930131989 | {"id": "divergent, end node"}
 844424930131990 | {"id": "convergent, initial node"}
 844424930131991 | {"id": "convergent middle node"}
 844424930131992 | {"id": "convergent, end node"}
 844424930131993 | {"id": "paths, vertex one"}
 844424930131994 | {"id": "paths, vertex two"}
 844424930131995 | {"id": "paths, vertex three"}
 844424930131996 | {"id": "paths, vertex four"}
(28 rows)

SELECT * FROM cypher('cypher_create', $$
	CREATE (:n_var {name: 'Node A'})
$$) as (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$
	CREATE (:n_var {name: 'Node B'})
$$) as (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$
	CREATE (:n_var {name: 'Node C'})
$$) as (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$
	MATCH (a:n_var), (b:n_var)
	WHERE a.name <> b.name
	CREATE (a)-[:e_var {name: a.name + ' -> ' + b.name}]->(b)
$$) as (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$
	MATCH (a:n_var)
	CREATE (a)-[:e_var {name: a.name + ' -> ' + a.name}]->(a)
$$) as (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$
	MATCH (a:n_var)
	CREATE (a)-[:e_var {name: a.name + ' -> new node'}]->(:n_other_node)
$$) as (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$
	MATCH (a:n_var)
	WHERE a.name = 'Node A'
	CREATE (a)-[b:e_var]->()
$$) as (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$
	CREATE (a)-[:b_var]->()
	RETURN a, id(a)
$$) as (a agtype, b agtype);
                               a                                |        b        
----------------------------------------------------------------+-----------------
 {"id": 281474976710659, "label": "", "properties": {}}::vertex | 281474976710659
(1 row)

SELECT * FROM cypher('cypher_create', $$
	CREATE ()-[b:e_var]->()
	RETURN b, id(b)
$$) as (a agtype, b agtype);
                                                             a                                                              |        b         
----------------------------------------------------------------------------------------------------------------------------+------------------
 {"id": 3940649673949198, "label": "e_var", "end_id": 281474976710662, "start_id": 281474976710661, "properties": {}}::edge | 3940649673949198
(1 row)

SELECT * FROM cypher('cypher_create', $$
	CREATE (a)-[b:e_var {id: 0}]->()
	RETURN a, b, b.id, b.id + 1
$$) as (a agtype, b agtype, c agtype, d agtype);
                               a                                |                                                                 b                                                                 | c | d 
----------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+---+---
 {"id": 281474976710663, "label": "", "properties": {}}::vertex | {"id": 3940649673949199, "label": "e_var", "end_id": 281474976710664, "start_id": 281474976710663, "properties": {"id": 0}}::edge | 0 | 1
(1 row)

SELECT * FROM cypher('cypher_create', $$
	MATCH (a:n_var)
	CREATE (a)-[b:e_var]->(a)
	RETURN a, b
$$) as (a agtype, b agtype);
                                          a                                           |                                                              b                                                               
--------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------
 {"id": 3659174697238529, "label": "n_var", "properties": {"name": "Node A"}}::vertex | {"id": 3940649673949200, "label": "e_var", "end_id": 3659174697238529, "start_id": 3659174697238529, "properties": {}}::edge
 {"id": 3659174697238530, "label": "n_var", "properties": {"name": "Node B"}}::vertex | {"id": 3940649673949201, "label": "e_var", "end_id": 3659174697238530, "start_id": 3659174697238530, "properties": {}}::edge
 {"id": 3659174697238531, "label": "n_var", "properties": {"name": "Node C"}}::vertex | {"id": 3940649673949202, "label": "e_var", "end_id": 3659174697238531, "start_id": 3659174697238531, "properties": {}}::edge
(3 rows)

SELECT * FROM cypher('cypher_create', $$
	MATCH (a:n_var)
	CREATE (a)-[b:e_var]->(c)
	RETURN a, b, c
$$) as (a agtype, b agtype, c agtype);
                                          a                                           |                                                              b                                                              |                               c                                
--------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------
 {"id": 3659174697238529, "label": "n_var", "properties": {"name": "Node A"}}::vertex | {"id": 3940649673949203, "label": "e_var", "end_id": 281474976710665, "start_id": 3659174697238529, "properties": {}}::edge | {"id": 281474976710665, "label": "", "properties": {}}::vertex
 {"id": 3659174697238530, "label": "n_var", "properties": {"name": "Node B"}}::vertex | {"id": 3940649673949204, "label": "e_var", "end_id": 281474976710666, "start_id": 3659174697238530, "properties": {}}::edge | {"id": 281474976710666, "label": "", "properties": {}}::vertex
 {"id": 3659174697238531, "label": "n_var", "properties": {"name": "Node C"}}::vertex | {"id": 3940649673949205, "label": "e_var", "end_id": 281474976710667, "start_id": 3659174697238531, "properties": {}}::edge | {"id": 281474976710667, "label": "", "properties": {}}::vertex
(3 rows)

SELECT * FROM cypher('cypher_create', $$
	CREATE (a)-[:e_var]->()
	RETURN a
$$) as (b agtype);
                               b                                
----------------------------------------------------------------
 {"id": 281474976710668, "label": "", "properties": {}}::vertex
(1 row)

SELECT * FROM cypher('cypher_create', $$
	CREATE ()-[b:e_var]->()
	RETURN b
$$) as (b agtype);
                                                             b                                                              
----------------------------------------------------------------------------------------------------------------------------
 {"id": 3940649673949207, "label": "e_var", "end_id": 281474976710671, "start_id": 281474976710670, "properties": {}}::edge
(1 row)

SELECT * FROM cypher('cypher_create', $$
	CREATE p=()-[:e_var]->()
	RETURN p
$$) as (b agtype);
                                                                                                                                 b                                                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 281474976710672, "label": "", "properties": {}}::vertex, {"id": 3940649673949208, "label": "e_var", "end_id": 281474976710673, "start_id": 281474976710672, "properties": {}}::edge, {"id": 281474976710673, "label": "", "properties": {}}::vertex]::path
(1 row)

SELECT * FROM cypher('cypher_create', $$
	CREATE p=(a {id:0})-[:e_var]->(a)
	RETURN p
$$) as (b agtype);
                                                                                                                                        b                                                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 281474976710674, "label": "", "properties": {"id": 0}}::vertex, {"id": 3940649673949209, "label": "e_var", "end_id": 281474976710674, "start_id": 281474976710674, "properties": {}}::edge, {"id": 281474976710674, "label": "", "properties": {"id": 0}}::vertex]::path
(1 row)

SELECT * FROM cypher('cypher_create', $$
	MATCH (a:n_var)
	CREATE p=(a)-[:e_var]->(a)
	RETURN p
$$) as (b agtype);
                                                                                                                                                        b                                                                                                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 3659174697238529, "label": "n_var", "properties": {"name": "Node A"}}::vertex, {"id": 3940649673949210, "label": "e_var", "end_id": 3659174697238529, "start_id": 3659174697238529, "properties": {}}::edge, {"id": 3659174697238529, "label": "n_var", "properties": {"name": "Node A"}}::vertex]::path
 [{"id": 3659174697238530, "label": "n_var", "properties": {"name": "Node B"}}::vertex, {"id": 3940649673949211, "label": "e_var", "end_id": 3659174697238530, "start_id": 3659174697238530, "properties": {}}::edge, {"id": 3659174697238530, "label": "n_var", "properties": {"name": "Node B"}}::vertex]::path
 [{"id": 3659174697238531, "label": "n_var", "properties": {"name": "Node C"}}::vertex, {"id": 3940649673949212, "label": "e_var", "end_id": 3659174697238531, "start_id": 3659174697238531, "properties": {}}::edge, {"id": 3659174697238531, "label": "n_var", "properties": {"name": "Node C"}}::vertex]::path
(3 rows)

SELECT * FROM cypher('cypher_create', $$
	CREATE p=(a)-[:e_var]->(), (a)-[b:e_var]->(a)
	RETURN p, b
$$) as (a agtype, b agtype);
                                                                                                                                 a                                                                                                                                  |                                                             b                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------
 [{"id": 281474976710675, "label": "", "properties": {}}::vertex, {"id": 3940649673949213, "label": "e_var", "end_id": 281474976710676, "start_id": 281474976710675, "properties": {}}::edge, {"id": 281474976710676, "label": "", "properties": {}}::vertex]::path | {"id": 3940649673949214, "label": "e_var", "end_id": 281474976710675, "start_id": 281474976710675, "properties": {}}::edge
(1 row)

SELECT * FROM cypher('cypher_create', $$
	MATCH (a:n_var)
	WHERE a.name = 'Node Z'
	CREATE (a)-[:e_var {name: a.name + ' -> does not exist'}]->(:n_other_node)
	RETURN a
$$) as (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher_create.n_var;
        id        |     properties     
------------------+--------------------
 3659174697238529 | {"name": "Node A"}
 3659174697238530 | {"name": "Node B"}
 3659174697238531 | {"name": "Node C"}
(3 rows)

SELECT * FROM cypher_create.e_var;
        id        |     start_id     |      end_id      |           properties           
------------------+------------------+------------------+--------------------------------
 3940649673949185 | 3659174697238529 | 3659174697238530 | {"name": "Node A -> Node B"}
 3940649673949186 | 3659174697238529 | 3659174697238531 | {"name": "Node A -> Node C"}
 3940649673949187 | 3659174697238530 | 3659174697238529 | {"name": "Node B -> Node A"}
 3940649673949188 | 3659174697238530 | 3659174697238531 | {"name": "Node B -> Node C"}
 3940649673949189 | 3659174697238531 | 3659174697238529 | {"name": "Node C -> Node A"}
 3940649673949190 | 3659174697238531 | 3659174697238530 | {"name": "Node C -> Node B"}
 3940649673949191 | 3659174697238529 | 3659174697238529 | {"name": "Node A -> Node A"}
 3940649673949192 | 3659174697238530 | 3659174697238530 | {"name": "Node B -> Node B"}
 3940649673949193 | 3659174697238531 | 3659174697238531 | {"name": "Node C -> Node C"}
 3940649673949194 | 3659174697238529 | 4222124650659841 | {"name": "Node A -> new node"}
 3940649673949195 | 3659174697238530 | 4222124650659842 | {"name": "Node B -> new node"}
 3940649673949196 | 3659174697238531 | 4222124650659843 | {"name": "Node C -> new node"}
 3940649673949197 | 3659174697238529 | 281474976710658  | {}
 3940649673949198 | 281474976710661  | 281474976710662  | {}
 3940649673949199 | 281474976710663  | 281474976710664  | {"id": 0}
 3940649673949200 | 3659174697238529 | 3659174697238529 | {}
 3940649673949201 | 3659174697238530 | 3659174697238530 | {}
 3940649673949202 | 3659174697238531 | 3659174697238531 | {}
 3940649673949203 | 3659174697238529 | 281474976710665  | {}
 3940649673949204 | 3659174697238530 | 281474976710666  | {}
 3940649673949205 | 3659174697238531 | 281474976710667  | {}
 3940649673949206 | 281474976710668  | 281474976710669  | {}
 3940649673949207 | 281474976710670  | 281474976710671  | {}
 3940649673949208 | 281474976710672  | 281474976710673  | {}
 3940649673949209 | 281474976710674  | 281474976710674  | {}
 3940649673949210 | 3659174697238529 | 3659174697238529 | {}
 3940649673949211 | 3659174697238530 | 3659174697238530 | {}
 3940649673949212 | 3659174697238531 | 3659174697238531 | {}
 3940649673949213 | 281474976710675  | 281474976710676  | {}
 3940649673949214 | 281474976710675  | 281474976710675  | {}
(30 rows)

--Check every label has been created
SELECT name, kind FROM ag_label ORDER BY name;
        name        | kind 
--------------------+------
 _ag_label_edge     | e
 _ag_label_vertex   | v
 b_var              | e
 child_elabel_one   | e
 child_elabel_three | e
 child_elabel_two   | e
 child_vlabel_one   | v
 child_vlabel_three | v
 child_vlabel_two   | v
 e                  | e
 e_var              | e
 n_other_node       | v
 n_var              | v
 parent_elabel      | e
 parent_vlabel      | v
 v                  | v
(16 rows)

--Validate every vertex has the correct label
SELECT * FROM cypher('cypher_create', $$MATCH (n) RETURN n$$) AS (n agtype);
                                                n                                                
-------------------------------------------------------------------------------------------------
 {"id": 281474976710657, "label": "", "properties": {}}::vertex
 {"id": 281474976710658, "label": "", "properties": {}}::vertex
 {"id": 281474976710659, "label": "", "properties": {}}::vertex
 {"id": 281474976710660, "label": "", "properties": {}}::vertex
 {"id": 281474976710661, "label": "", "properties": {}}::vertex
 {"id": 281474976710662, "label": "", "properties": {}}::vertex
 {"id": 281474976710663, "label": "", "properties": {}}::vertex
 {"id": 281474976710664, "label": "", "properties": {}}::vertex
 {"id": 281474976710665, "label": "", "properties": {}}::vertex
 {"id": 281474976710666, "label": "", "properties": {}}::vertex
 {"id": 281474976710667, "label": "", "properties": {}}::vertex
 {"id": 281474976710668, "label": "", "properties": {}}::vertex
 {"id": 281474976710669, "label": "", "properties": {}}::vertex
 {"id": 281474976710670, "label": "", "properties": {}}::vertex
 {"id": 281474976710671, "label": "", "properties": {}}::vertex
 {"id": 281474976710672, "label": "", "properties": {}}::vertex
 {"id": 281474976710673, "label": "", "properties": {}}::vertex
 {"id": 281474976710674, "label": "", "properties": {"id": 0}}::vertex
 {"id": 281474976710675, "label": "", "properties": {}}::vertex
 {"id": 281474976710676, "label": "", "properties": {}}::vertex
 {"id": 844424930131969, "label": "v", "properties": {}}::vertex
 {"id": 844424930131970, "label": "v", "properties": {}}::vertex
 {"id": 844424930131971, "label": "v", "properties": {"key": "value"}}::vertex
 {"id": 844424930131972, "label": "v", "properties": {}}::vertex
 {"id": 844424930131973, "label": "v", "properties": {}}::vertex
 {"id": 844424930131974, "label": "v", "properties": {}}::vertex
 {"id": 844424930131975, "label": "v", "properties": {}}::vertex
 {"id": 844424930131976, "label": "v", "properties": {}}::vertex
 {"id": 844424930131977, "label": "v", "properties": {}}::vertex
 {"id": 844424930131978, "label": "v", "properties": {}}::vertex
 {"id": 844424930131979, "label": "v", "properties": {}}::vertex
 {"id": 844424930131980, "label": "v", "properties": {"id": "right rel, initial node"}}::vertex
 {"id": 844424930131981, "label": "v", "properties": {"id": "right rel, end node"}}::vertex
 {"id": 844424930131982, "label": "v", "properties": {"id": "left rel, initial node"}}::vertex
 {"id": 844424930131983, "label": "v", "properties": {"id": "left rel, end node"}}::vertex
 {"id": 844424930131984, "label": "v", "properties": {"id": "path, initial node"}}::vertex
 {"id": 844424930131985, "label": "v", "properties": {"id": "path, middle node"}}::vertex
 {"id": 844424930131986, "label": "v", "properties": {"id": "path, last node"}}::vertex
 {"id": 844424930131987, "label": "v", "properties": {"id": "divergent, initial node"}}::vertex
 {"id": 844424930131988, "label": "v", "properties": {"id": "divergent middle node"}}::vertex
 {"id": 844424930131989, "label": "v", "properties": {"id": "divergent, end node"}}::vertex
 {"id": 844424930131990, "label": "v", "properties": {"id": "convergent, initial node"}}::vertex
 {"id": 844424930131991, "label": "v", "properties": {"id": "convergent middle node"}}::vertex
 {"id": 844424930131992, "label": "v", "properties": {"id": "convergent, end node"}}::vertex
 {"id": 844424930131993, "label": "v", "properties": {"id": "paths, vertex one"}}::vertex
 {"id": 844424930131994, "label": "v", "properties": {"id": "paths, vertex two"}}::vertex
 {"id": 844424930131995, "label": "v", "properties": {"id": "paths, vertex three"}}::vertex
 {"id": 844424930131996, "label": "v", "properties": {"id": "paths, vertex four"}}::vertex
 {"id": 1125899906842625, "label": "parent_vlabel", "properties": {}}::vertex
 {"id": 3659174697238529, "label": "n_var", "properties": {"name": "Node A"}}::vertex
 {"id": 3659174697238530, "label": "n_var", "properties": {"name": "Node B"}}::vertex
 {"id": 3659174697238531, "label": "n_var", "properties": {"name": "Node C"}}::vertex
 {"id": 4222124650659841, "label": "n_other_node", "properties": {}}::vertex
 {"id": 4222124650659842, "label": "n_other_node", "properties": {}}::vertex
 {"id": 4222124650659843, "label": "n_other_node", "properties": {}}::vertex
 {"id": 1407374883553281, "label": "child_vlabel_one", "properties": {}}::vertex
 {"id": 1688849860263937, "label": "child_vlabel_two", "properties": {}}::vertex
 {"id": 1970324836974593, "label": "child_vlabel_three", "properties": {}}::vertex
(58 rows)

-- prepared statements
PREPARE p_1 AS SELECT * FROM cypher('cypher_create', $$CREATE (v:new_vertex {key: 'value'}) RETURN v$$) AS (a agtype);
EXECUTE p_1;
                                            a                                            
-----------------------------------------------------------------------------------------
 {"id": 4785074604081153, "label": "new_vertex", "properties": {"key": "value"}}::vertex
(1 row)

EXECUTE p_1;
                                            a                                            
-----------------------------------------------------------------------------------------
 {"id": 4785074604081154, "label": "new_vertex", "properties": {"key": "value"}}::vertex
(1 row)

PREPARE p_2 AS SELECT * FROM cypher('cypher_create', $$CREATE (v:new_vertex {key: $var_name}) RETURN v$$, $1) AS (a agtype);
EXECUTE p_2('{"var_name": "Hello Prepared Statements"}');
                                                      a                                                      
-------------------------------------------------------------------------------------------------------------
 {"id": 4785074604081155, "label": "new_vertex", "properties": {"key": "Hello Prepared Statements"}}::vertex
(1 row)

EXECUTE p_2('{"var_name": "Hello Prepared Statements 2"}');
                                                       a                                                       
---------------------------------------------------------------------------------------------------------------
 {"id": 4785074604081156, "label": "new_vertex", "properties": {"key": "Hello Prepared Statements 2"}}::vertex
(1 row)

-- pl/pgsql
CREATE FUNCTION create_test()
RETURNS TABLE(vertex agtype)
LANGUAGE plpgsql
VOLATILE
AS $BODY$
BEGIN
	RETURN QUERY SELECT * FROM cypher('cypher_create', $$CREATE (v:new_vertex {key: 'value'}) RETURN v$$) AS (a agtype);
END
$BODY$;
SELECT create_test();
                                       create_test                                       
-----------------------------------------------------------------------------------------
 {"id": 4785074604081157, "label": "new_vertex", "properties": {"key": "value"}}::vertex
(1 row)

SELECT create_test();
                                       create_test                                       
-----------------------------------------------------------------------------------------
 {"id": 4785074604081158, "label": "new_vertex", "properties": {"key": "value"}}::vertex
(1 row)

--
-- Errors
--
-- Var 'a' cannot have properties in the create clause
SELECT * FROM cypher('cypher_create', $$
	MATCH (a:n_var)
	WHERE a.name = 'Node A'
	CREATE (a {test:1})-[:e_var]->()
$$) as (a agtype);
ERROR:  previously declared nodes in a create clause cannot have properties
LINE 1: SELECT * FROM cypher('cypher_create', $$
                                               ^
-- Var 'a' cannot change labels
SELECT * FROM cypher('cypher_create', $$
	MATCH (a:n_var)
	WHERE a.name = 'Node A'
	CREATE (a:new_label)-[:e_var]->()
$$) as (a agtype);
ERROR:  previously declared variables cannot have a label
LINE 1: SELECT * FROM cypher('cypher_create', $$
                                               ^
SELECT * FROM cypher('cypher_create', $$
	MATCH (a:n_var)-[b]-()
	WHERE a.name = 'Node A'
	CREATE (a)-[b:e_var]->()
$$) as (a agtype);
ERROR:  variable b already exists
LINE 1: SELECT * FROM cypher('cypher_create', $$
                                               ^
-- A valid single vertex path
SELECT * FROM cypher('cypher_create', $$
	CREATE p=(a)
	RETURN p
$$) as (a agtype);
                                   a                                    
------------------------------------------------------------------------
 [{"id": 281474976710677, "label": "", "properties": {}}::vertex]::path
(1 row)

--CREATE with joins
SELECT *
FROM cypher('cypher_create', $$
	CREATE (a)
	RETURN a
$$) as q(a agtype),
cypher('cypher_create', $$
	CREATE (b)
	RETURN b
$$) as t(b agtype);
ERROR:  cypher create clause cannot be rescaned
HINT:  its unsafe to use joins in a query with a Cypher CREATE clause
-- column definition list for CREATE clause must contain a single agtype
-- attribute
SELECT * FROM cypher('cypher_create', $$CREATE ()$$) AS (a int);
ERROR:  column definition list for CREATE clause must contain a single agtype attribute
LINE 1: SELECT * FROM cypher('cypher_create', $$CREATE ()$$) AS (a i...
                      ^
HINT:  ... cypher($$ ... CREATE ... $$) AS t(c agtype) ...
SELECT * FROM cypher('cypher_create', $$CREATE ()$$) AS (a agtype, b int);
ERROR:  column definition list for CREATE clause must contain a single agtype attribute
LINE 1: SELECT * FROM cypher('cypher_create', $$CREATE ()$$) AS (a a...
                      ^
HINT:  ... cypher($$ ... CREATE ... $$) AS t(c agtype) ...
-- nodes cannot use edge labels and edge labels cannot use node labels
SELECT * FROM cypher('cypher_create', $$
	CREATE
		(:existing_vlabel {id: 1})
		-[c:existing_elabel {id: 3}]->
		(:existing_vlabel {id: 2})
$$) as (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$
	MATCH(a), (b)
		WHERE a.id = 1 AND b.id = 2
	CREATE (a)-[c:existing_vlabel { id: 4}]->(b)
	RETURN c.id
$$) as (c agtype);
ERROR:  label existing_vlabel is for vertices, not edges
LINE 4:  CREATE (a)-[c:existing_vlabel { id: 4}]->(b)
                    ^
SELECT * FROM cypher('cypher_create', $$
	CREATE (a:existing_elabel { id: 5})
	RETURN a.id
$$) as (a agtype);
ERROR:  label existing_elabel is for edges, not vertices
LINE 2:  CREATE (a:existing_elabel { id: 5})
                ^
--
-- check the cypher CREATE clause inside an INSERT INTO
--
CREATE TABLE simple_path (u agtype, e agtype, v agtype);
INSERT INTO simple_path(SELECT * FROM cypher('cypher_create',
    $$CREATE (u)-[e:knows]->(v) return u, e, v
    $$) AS (u agtype, e agtype, v agtype));
SELECT count(*) FROM simple_path;
 count 
-------
     1
(1 row)

--
-- check the cypher CREATE clause inside of a BEGIN/END/COMMIT block
--
BEGIN;
SELECT * FROM cypher('cypher_create', $$ CREATE (a:Part {part_num: '670'}) $$) as (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$ MATCH (a:Part) RETURN a $$) as (a agtype);
                                          a                                           
--------------------------------------------------------------------------------------
 {"id": 5910974510923777, "label": "Part", "properties": {"part_num": "670"}}::vertex
(1 row)

SELECT * FROM cypher('cypher_create', $$ CREATE (a:Part {part_num: '671'}) $$) as (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$ CREATE (a:Part {part_num: '672'}) $$) as (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$ MATCH (a:Part) RETURN a $$) as (a agtype);
                                          a                                           
--------------------------------------------------------------------------------------
 {"id": 5910974510923777, "label": "Part", "properties": {"part_num": "670"}}::vertex
 {"id": 5910974510923778, "label": "Part", "properties": {"part_num": "671"}}::vertex
 {"id": 5910974510923779, "label": "Part", "properties": {"part_num": "672"}}::vertex
(3 rows)

SELECT * FROM cypher('cypher_create', $$ CREATE (a:Part {part_num: '673'}) $$) as (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$ MATCH (a:Part) RETURN a $$) as (a agtype);
                                          a                                           
--------------------------------------------------------------------------------------
 {"id": 5910974510923777, "label": "Part", "properties": {"part_num": "670"}}::vertex
 {"id": 5910974510923778, "label": "Part", "properties": {"part_num": "671"}}::vertex
 {"id": 5910974510923779, "label": "Part", "properties": {"part_num": "672"}}::vertex
 {"id": 5910974510923780, "label": "Part", "properties": {"part_num": "673"}}::vertex
(4 rows)

END;
--
-- Clean up
--
DROP TABLE simple_path;
DROP FUNCTION create_test;
SELECT drop_graph('cypher_create', true);
NOTICE:  drop cascades to 21 other objects
DETAIL:  drop cascades to table cypher_create._ag_label_vertex
drop cascades to table cypher_create._ag_label_edge
drop cascades to table cypher_create.v
drop cascades to table cypher_create.parent_vlabel
drop cascades to table cypher_create.child_vlabel_one
drop cascades to table cypher_create.child_vlabel_two
drop cascades to table cypher_create.child_vlabel_three
drop cascades to table cypher_create.parent_elabel
drop cascades to table cypher_create.child_elabel_one
drop cascades to table cypher_create.child_elabel_two
drop cascades to table cypher_create.child_elabel_three
drop cascades to table cypher_create.e
drop cascades to table cypher_create.n_var
drop cascades to table cypher_create.e_var
drop cascades to table cypher_create.n_other_node
drop cascades to table cypher_create.b_var
drop cascades to table cypher_create.new_vertex
drop cascades to table cypher_create.existing_vlabel
drop cascades to table cypher_create.existing_elabel
drop cascades to table cypher_create.knows
drop cascades to table cypher_create."Part"
NOTICE:  graph "cypher_create" has been dropped
 drop_graph 
------------
 
(1 row)

--
-- End
--
